  //判断bucket是否存在
    function ossBucketExist($name){
        $accessKeyId=env('OSSAPPKEYID');
        $accessSecret=env('OSSAPPSECRET');
        $endpoint = "http://oss-cn-hangzhou.aliyuncs.com";
        //存储空间名称
        $bucket=$name;
        try{
            $ossClient=new OssClient($accessKeyId,$accessSecret,$endpoint);
            $res = $ossClient->doesBucketExist($bucket);
            return $res;
        }catch (OssException $e){
            throw new MyException('oss创建bucket失败'.$e->getMessage().'_'.$e->getLine().'_'.$e->getFile());
        }
    }
  //阿里oss创建bucket
    function  ossCreate($name){
        $accessKeyId=env('OSSAPPKEYID');
        $accessSecret=env('OSSAPPSECRET');
        $endpoint = "http://oss-cn-hangzhou.aliyuncs.com";
        //存储空间名称
        $bucket=$name;
        try{
            $ossClient=new OssClient($accessKeyId,$accessSecret,$endpoint);

//            $ossClient->createBucket($bucket);
            // 设置存储空间的存储类型为低频访问类型，默认是标准类型。
            $options = array(
                OssClient::OSS_STORAGE => OssClient::OSS_STORAGE_IA
            );
            //判断存储空间名称是否存在
            // 设置存储空间的权限为公共读，默认是私有读写。
            $ossClient->createBucket($bucket, OssClient::OSS_ACL_TYPE_PUBLIC_READ, $options);
            return true;
        }catch (OssException $e){
            throw new MyException('oss创建bucket失败'.$e->getMessage().'_'.$e->getLine().'_'.$e->getFile());
        }
    }

    //bucket列表
    function ossBucketList(){
        $accessKeyId=env('OSSAPPKEYID');
        $accessSecret=env('OSSAPPSECRET');
        $endpoint = "http://oss-cn-hangzhou.aliyuncs.com";
        try{
            $ossClient=new OssClient($accessKeyId,$accessSecret,$endpoint);
            // 列举所有的Bucket。
            $bucketListInfo = $ossClient->listBuckets();
            $bucketList = $bucketListInfo->getBucketList();
            $mtdata=[];
            foreach($bucketList as $bucket) {
                $arr['location']=$bucket->getLocation();
                $arr['name']=$bucket->getName();
                $arr['date']=$bucket->getCreatedate();
                $mtdata[]=$arr;
            }
            return $mtdata;
        }catch (OssException $e){
            throw new MyException('获取bucket列表失败'.$e->getMessage().'_'.$e->getLine().'_'.$e->getFile());
        }
    }
    //简单文件上传
    function  ossSimpleUpload($bucket,$fileName,$filePath){
        $accessKeyId=env('OSSAPPKEYID');
        $accessSecret=env('OSSAPPSECRET');
        $endpoint = "http://oss-cn-hangzhou.aliyuncs.com";
        // 设置存储空间名称。
        // 设置文件名称
        // 设置文件路径由本地文件路径加文件名包括后缀组成，例如/users/local/myfile.txt。
        try{
            $ossClient=new OssClient($accessKeyId,$accessSecret,$endpoint);
            $info=$ossClient->uploadFile($bucket, $fileName, $filePath);
            $ossUrl = $info['oss-request-url'];
            // 如果图片的协议是http，则转换成https
            if (substr($ossUrl, 0, 4) == 'http') {
                $ossUrl = substr_replace($ossUrl, 'https', 0, 4);
            }
            return $ossUrl;
        }catch (OssException $e){
            throw new MyException('oss简单上传文件失败'.$e->getMessage().'_'.$e->getLine().'_'.$e->getFile());
        }
    }